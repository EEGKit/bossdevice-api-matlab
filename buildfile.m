function plan = buildfile

import matlab.buildtool.Task
import matlab.buildtool.tasks.CodeIssuesTask
import matlab.buildtool.tasks.TestTask
import matlab.buildtool.tasks.PcodeTask
import matlab.unittest.Verbosity

% Create a plan with no tasks
plan = buildplan;

plan("check") = CodeIssuesTask(...
    Results='results.sarif', ...
    ErrorThreshold=0,...
    WarningThreshold=0);

plan("updateSGdeps") = Task( ...
    Description = "Update Speedgoat toolbox dependencies", ...
    Actions = @(~) updateSGdeps,...
    Outputs = "toolbox/dependencies/sg/**");

plan("test") = Task( ...
    Description = "Run unit tests", ...
    Actions = @(~) testTask);

plan("buildDoc") = Task( ...
    Description = "Build HTML doc from sources", ...
    Actions = @(~) buildDoc,...
    Inputs = 'docSource/**/*.mlx',...
    Outputs = "toolbox/html/**/*.html");

plan("pcodeBossapi") = PcodeTask(...
    "toolbox/dependencies/+bossapi","toolbox/dependencies/+bossapi",...
    Description = "pcode bossapi");

plan("cleanupMfiles") = Task( ...
    Description = "Clean up m-files after pcoding", ...
    Actions = @(~) cleanupMfiles("toolbox/dependencies/+bossapi"),...
    Dependencies = "pcodeBossapi");

plan("package") = Task( ...
    Description = "Package toolbox", ...
    Dependencies = ["check" "updateSGdeps" "test" "buildDoc" "pcodeBossapi" "cleanupMfiles"], ...
    Actions = @(~,toolboxVer,authorName) releaseTask(toolboxVer,authorName));

% Set default tasks in the plan
plan.DefaultTasks = ["check" "test"];

end
